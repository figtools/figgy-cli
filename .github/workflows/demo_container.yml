name: Build & Deploy

on:
  repository_dispatch:
    types: [e2e-tests-complete]
  push:
    branches: [test-ui-embed]
jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

#      - name: Set up Python 3.9
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9

      - name: Install dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev

      - name: Download latest artifact
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          VERSION: ${{ env.RELEASE_VERSION }}
        run: |

          echo "Deploying linux figgy to $dest"
          aws s3 cp s3://figgy-website/releases/cli/unstable/linux/figgy.zip .


      - name: Build
        run: |
          # Print working directory
          echo "Installing Figgy UI"
          cd $GITHUB_WORKSPACE/figgy-ui/app

          # Install dependencies
          npm install
          npm install -g @angular/cli

          # Install app
          cd $GITHUB_WORKSPACE/figgy-ui/scripts/
          ./cicd-install.sh

          echo "Linux build is happening!!!"
          cd $GITHUB_WORKSPACE/src
          pwd
          ls -l figcli/ui/templates
          ls -l figcli/ui/assets

          # install requirements
          pip3 install pyinstaller==4.0
          pip3 install -r requirements.txt
          pip3 install -r requirements-linux.txt

          pyinstaller figgy.spec

          ../scripts/zip_it.sh
          ../scripts/tar_it.sh $(../scripts/get_version.sh)


      - name: Test Artifact
        env:
          FIGGY_DISABLE_KEYRING: "true"
          OVERRIDE_KEYRING: "true"
        run: |
          export TERM=linux
          export TERMINFO=/etc/terminfo

          echo "Adding figgy binary to path"
          cd src/dist/figgy/
          export "PATH=$PATH:$(pwd)"
          cd ../../
          figgy --version

          #echo "Testing Linux binary as bastion user"
          #python run_tests.py bastion

      - name: Get Version
        id: version
        run: |
          cd src
          # Parse version
          VERSION=$(../scripts/get_version.sh)
          echo "Setting release version to $VERSION"
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
